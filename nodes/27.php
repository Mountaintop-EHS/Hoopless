<div class="col-md-12 col-margin bg-1">
  <h2>The Problem</h2>
  <p>Due to uncontrolled variables in the casting process, parts were often casted bent in either a concave shape or convex shape, which was referred to as warped. This caused issues because the parts had raised detail, which needed to be process by the robots in at least 2 opposite directions (e.g. 0&deg; and 180&deg). When the robots would process the concave parts they would not stay in the jig and the part would get shot out by a wheel spinning at up to 4,500 RPM. The projectile would cause a chain reaction that would often result in the destruction of the part, destruction of neighboring parts, destruction of 4'x4' glass safety panels, and jeopardized employee safety. When the robot attempted to process convex parts, which were raised in the middle, the middle of the part would end up processed more than the ends and the part would be scrapped for quality control reasons.</p>
</div>

<div class="col-md-12 col-margin bg-1">
  <h2>The Solution</h2>
  <p>After careful inspection, I noticed that the concave parts were shooting out of the robots' <abbr title="a jig is what held the part to the robot's arm">jig</abbr> only when the top portion of the part was being processed. Therefore, I figured that if I eliminated the robots need to process the top portion of the part, the part would stay in the jig. Unfortunately, it wasn't that simple. If the robot did not process the top portion of the part at all, the part's surface would appear uneven and not pass quality control inspection. Luckily, using a little common sense I figured away around this by developing a routine I named the Warp Offset Routine. As illustrated below, the Warp Offset Routine would complete 100% of the processing to the bottom of the warped part, 50% to the middle portion of the part, and skip the top warped portion of the part. It would then spin the parts around 180&deg; and repeat this process. The result was a perfectly even part that was not broken.</p>

  <p><u>OEM Routine</u></p>
  <p><img src="<?php echo SERVER;?>/assets/portfolio/images/oem-routine.jpg"/></p>
  <p><u>Warp Offset Routine</u></p>
  <p><img src="<?php echo SERVER;?>/assets/portfolio/images/warp-offset-routine.jpg"/></p>

  <p>As illustrated above, the Warp Offset Routine allowed for the parts to be processed evenly without directly processing the top warped portion of the part in a way that would cause it to fall out. I am pleased to report, this program modification eliminated scrap on all concave parts, which decreased manufacturing costs.<p>
    <p>To prevent scrap generated from the processing of convex parts, I integrated a variable speed input into the program to allow for the operator to set the speed at which the x-offset was processed. This allowed for convex parts to be processed evenly despite it being an uneven surface. In addition, I allowed the operator to set the distance of the Warp Offset Routine from the edge of the part. This prevented additional wear on the edge of the part and helped reduced manufacturing costs. Essentially, that is how I eliminated scrap.</p>
  </div>

  <div class="col-md-12 col-margin bg-1">
    <h2>The Code</h2>
    <p>Although the actual solution consisted of numerous functions and other routines, below is basically what the warp offset looked like in code</p>
    <pre><code class="language-fanuc">1:  !================================;
2:  ! WARNING: DO NOT MODIFY.;
3:  ! CUT_ALL Routine;
4:  ! By: Matt Heroux;
5:  ! This single function will;
6:  ! process any size or shape part;
7:  ! to perfection;
8:  !================================;
9:  ;
10:  !check which head to run. ;
11:  R[164]=AR[1]    ;
12:   ;
13:  SELECT R[164]=1,JMP LBL[140] ;
14:         =2,JMP LBL[141] ;
15:   ;
16:  !******************************** ;
17:  ! HD1 SECTION ;
18:  !******************************** ;
19:  LBL[140] ;
20:   ;
21:  !-------------------------------- ;
22:  !0" PASS ;
23:  !-------------------------------- ;
24:  IF (R[194]<1 OR R[194]>4),JMP LBL[50] ;
25:   ;
26:  !Move to 1st Position ;
27:  !last # is for 8in" ;
28:  PR[4,1]=(R[189]*25.4+R[191]+R[158]) ;
29:  PR[4,2]=(R[177]+(R[190]*25.4)/2) ;
30:  PR[4,3]=((-380)+R[13]-R[188]) ;
31:  PR[4,7]=0+R[187]    ;
32:J PR[4] 100% CNT100    ;
33:   ;
34:  !Push cut warpOffset portion ;
35:  R[105]=(R[199]*(R[197]/100)) ;
36:  PR[4,1]=(PR[4,1]-(R[196])) ;
37:  !!pathOption: 1 - Crosscut   ;
38:  IF R[195]<1,JMP LBL[1] ;
39:  !!!B, D, & A Calculations ;
40:  R[170]=((R[177]*(-1)+R[190]*25.4/2)+(R[178]-R[190]*25.4/2)) ;
41:  R[171]=(R[196]) ;
42:  R[172]=((R[189]*25.4)-(R[196])) ;
43:  !!!E = B * D / A ;
44:  PR[4,2]=(R[177]+(R[190]*25.4)/2) ;
45:  PR[4,2]=(PR[4,2]+(R[170]*R[171]/R[172])) ;
46:  LBL[1] ;
47:  R[173]=(R[199]*(R[197]/100)) ;
48:L PR[4] R[173]mm/sec CNT100    ;
49:   ;
50:  !Push cut unwarped portion ;
51:  PR[4,1]=((R[189]*(-25.4))+(R[196])*2+PR[4,1]) ;
52:  !!pathOption: 1 - Crosscut   ;
53:  IF R[195]<1,JMP LBL[2] ;
54:  PR[4,2]=(R[178]-R[190]*25.4/2) ;
55:  LBL[2] ;
56:  R[173]=R[199]    ;
57:L PR[4] R[173]mm/sec CNT100    ;
58:   ;
59:  !Pull cut unwarped portion ;
60:  PR[4,1]=((R[189]*25.4)-(R[196])*2+PR[4,1]) ;
61:  !!pathOption: >= 2 ;
62:  IF R[195]<2,JMP LBL[3] ;
63:  !!!B, D, & A Calculations ;
64:  R[170]=((R[177]*(-1)+R[190]*25.4/2)+(R[178]-R[190]*25.4/2)) ;
65:  R[171]=(R[196]) ;
66:  R[172]=((R[189]*25.4)-(R[196])) ;
67:  !!!E = B * D / A ;
68:  PR[4,2]=(R[177]+(R[190]*25.4)/2) ;
69:  PR[4,2]=(PR[4,2]+(R[170]*R[171]/R[172])) ;
70:  LBL[3] ;
71:  R[173]=R[199]    ;
72:L PR[4] R[173]mm/sec CNT100    ;
73:   ;
74:  !Pull cut warpOffset portion ;
75:  R[173]=(R[199]*(R[197]/100)) ;
76:  PR[4,1]=(PR[4,1]+(R[196])) ;
77:  !!pathOption: >= 2 ;
78:  IF R[195]<2,JMP LBL[4] ;
79:  PR[4,2]=(R[177]+(R[190]*25.4)/2) ;
80:  LBL[4] ;
81:  R[173]=(R[199]*(R[197]/100)) ;
82:L PR[4] R[173]mm/sec CNT100    ;
83:   ;
84:  PR[4,1]=(PR[4,1]+200) ;
85:  PR[4,3]=(PR[4,3]-200) ;
86:J PR[4] 100% CNT100    ;
87:   ;
88:  LBL[50] ;
89:   ;
90:  !-------------------------------- ;
91:  !180" PASS ;
92:  !-------------------------------- ;
93:  IF (R[194]<2 OR R[194]>4),JMP LBL[51] ;
94:   ;
95:  Gun Reset    ;
96:  !Move to 1st Position ;
97:  !last # is for 8in" ;
98:  PR[4,1]=(R[189]*25.4+R[191]-R[158]) ;
99:  PR[4,2]=(R[178]-(R[190]*25.4)/2) ;
100:  PR[4,3]=((-380)+R[13]-R[188]) ;
101:  PR[4,7]=180+R[187]    ;
102:J PR[4] 100% CNT100    ;
103:   ;
104:  !Push cut warpOffset portion ;
105:  R[105]=(R[199]*(R[197]/100)) ;
106:  PR[4,1]=(PR[4,1]-(R[196])) ;
107:L PR[4] R[173]mm/sec CNT100    ;
108:  !!pathOption: 1 - Crosscut   ;
109:  IF R[195]<2,JMP LBL[5] ;
110:  !!!B, D, & A Calculations ;
111:  R[170]=((R[177]*(-1)+R[190]*25.4/2)+(R[178]-R[190]*25.4/2)) ;
112:  R[171]=(R[196]) ;
113:  R[172]=((R[189]*25.4)-(R[196])) ;
114:  !!!E = B * D / A ;
115:  PR[4,2]=(R[178]-(R[190]*25.4)/2) ;
116:  PR[4,2]=(PR[4,2]-(R[170]*R[171]/R[172])) ;
117:  LBL[5] ;
118:  R[173]=(R[199]*(R[197]/100)) ;
119:L PR[4] R[173]mm/sec CNT100    ;
120:   ;
121:  !Push cut unwarped portion ;
122:  PR[4,1]=((R[189]*(-25.4))+(R[196])*2+PR[4,1]) ;
123:  !!pathOption: 1 - Crosscut   ;
124:  IF R[195]<1,JMP LBL[6] ;
125:  PR[4,2]=(R[177]+R[190]*25.4/2) ;
126:  LBL[6] ;
127:  R[173]=R[199]    ;
128:L PR[4] R[173]mm/sec CNT100    ;
129:   ;
130:  !Pull cut unwarped portion ;
131:  PR[4,1]=((R[189]*25.4)-(R[196])*2+PR[4,1]) ;
132:  !!pathOption: >= 2 ;
133:  IF R[195]<2,JMP LBL[7] ;
134:  !!!B, D, & A Calculations ;
135:  R[170]=((R[177]*(-1)+R[190]*25.4/2)+(R[178]-R[190]*25.4/2)) ;
136:  R[171]=(R[196]) ;
137:  R[172]=((R[189]*25.4)-(R[196])) ;
138:  !!!E = B * D / A ;
139:  PR[4,2]=(R[178]-(R[190]*25.4)/2) ;
140:  PR[4,2]=(PR[4,2]-(R[170]*R[171]/R[172])) ;
141:  LBL[7] ;
142:  R[173]=R[199]    ;
143:L PR[4] R[173]mm/sec CNT100    ;
144:   ;
145:  !Pull cut warpOffset portion ;
146:  PR[4,1]=(PR[4,1]+(R[196])) ;
147:  !!pathOption: >= 2 ;
148:  IF R[195]<2,JMP LBL[8] ;
149:  PR[4,2]=(R[178]-(R[190]*25.4)/2) ;
150:  LBL[8] ;
151:  R[173]=(R[199]*(R[197]/100)) ;
152:L PR[4] R[173]mm/sec CNT100    ;
153:   ;
154:  PR[4,1]=(PR[4,1]+200) ;
155:  PR[4,3]=(PR[4,3]-200) ;
156:J PR[4] 100% CNT100    ;
157:   ;
158:  LBL[51] ;
159:   ;
160:  !-------------------------------- ;
161:  !90" PASS ;
162:  !-------------------------------- ;
163:  IF (R[194]<3 OR R[194]>4),JMP LBL[52] ;
164:   ;
165:  Gun Reset    ;
166:  !Move to 1st Position ;
167:  PR[4,1]=(R[190]*25.4+R[191]) ;
168:  PR[4,2]=(R[177]+(R[189]*25.4)/2) ;
169:  PR[4,3]=((-380)+R[13]-R[188]) ;
170:  PR[4,7]=90+R[187]    ;
171:J PR[4] 100% CNT100    ;
172:   ;
173:  !Push cut warpOffset portion ;
174:  PR[4,1]=(PR[4,1]-(R[196])) ;
175:  !!pathOption: 1 - Crosscut   ;
176:  IF R[195]<1,JMP LBL[9] ;
177:  !!!B, D, & A Calculations ;
178:  R[170]=((R[177]*(-1)+R[189]*25.4/2)+(R[178]-R[189]*25.4/2)) ;
179:  R[171]=(R[196]) ;
180:  R[172]=((R[190]*25.4)-(R[196])) ;
181:  !!!E = B * D / A ;
182:  PR[4,2]=(R[177]+(R[189]*25.4)/2) ;
183:  PR[4,2]=(PR[4,2]+(R[170]*R[171]/R[172])) ;
184:  LBL[9] ;
185:  R[173]=(R[199]*(R[197]/100)) ;
186:L PR[4] R[173]mm/sec CNT100    ;
187:   ;
188:  !Push cut unwarped portion ;
189:  PR[4,1]=((R[190]*(-25.4))+(R[196])*2+PR[4,1]) ;
190:  !!pathOption: 1 - Crosscut   ;
191:  IF R[195]<1,JMP LBL[10] ;
192:  PR[4,2]=(R[178]-R[189]*25.4/2) ;
193:  LBL[10] ;
194:  R[173]=R[199]    ;
195:L PR[4] R[173]mm/sec CNT100    ;
196:   ;
197:  !Pull cut unwarped portion ;
198:  PR[4,1]=((R[190]*25.4)-(R[196])*2+PR[4,1]) ;
199:  !!pathOption: >= 2 ;
200:  IF R[195]<2,JMP LBL[11] ;
201:  !!!B, D, & A Calculations ;
202:  R[170]=((R[177]*(-1)+R[189]*25.4/2)+(R[178]-R[189]*25.4/2)) ;
203:  R[171]=(R[196]) ;
204:  R[172]=((R[190]*25.4)-(R[196])) ;
205:  !!!E = B * D / A ;
206:  PR[4,2]=(R[177]+(R[189]*25.4)/2) ;
207:  PR[4,2]=(PR[4,2]+(R[170]*R[171]/R[172])) ;
208:  LBL[11] ;
209:  R[173]=R[199]    ;
210:L PR[4] R[173]mm/sec CNT100    ;
211:   ;
212:  !Pull cut warpOffset portion ;
213:  PR[4,1]=(PR[4,1]+(R[196])) ;
214:  !!pathOption: >= 2 ;
215:  IF R[195]<2,JMP LBL[12] ;
216:  PR[4,2]=(R[177]+(R[189]*25.4)/2) ;
217:  LBL[12] ;
218:  R[173]=(R[199]*(R[197]/100)) ;
219:L PR[4] R[173]mm/sec CNT100    ;
220:   ;
221:  PR[4,1]=(PR[4,1]+200) ;
222:  PR[4,3]=(PR[4,3]-200) ;
223:J PR[4] 100% CNT100    ;
224:   ;
225:  LBL[52] ;
226:   ;
227:  !-------------------------------- ;
228:  !-90" PASS ;
229:  !-------------------------------- ;
230:  IF (R[194]<4 OR R[194]>4),JMP LBL[53] ;
231:   ;
232:  Gun Reset    ;
233:  !Move to 1st Position ;
234:  PR[4,1]=(R[190]*25.4+R[191]) ;
235:  PR[4,2]=(R[178]-(R[189]*25.4)/2) ;
236:  PR[4,3]=((-380)+R[13]-R[188]) ;
237:  PR[4,7]=(-90)+R[187]    ;
238:J PR[4] 100% CNT100    ;
239:   ;
240:  !Push cut warpOffset portion ;
241:  PR[4,1]=(PR[4,1]-(R[196])) ;
242:  !!pathOption: 1 - Crosscut   ;
243:  IF R[195]<1,JMP LBL[13] ;
244:  !!!B, D, & A Calculations ;
245:  R[170]=((R[177]*(-1)+R[189]*25.4/2)+(R[178]-R[189]*25.4/2)) ;
246:  R[171]=(R[196]) ;
247:  R[172]=((R[190]*25.4)-(R[196])) ;
248:  !!!E = B * D / A ;
249:  PR[4,2]=(R[178]-(R[189]*25.4)/2) ;
250:  PR[4,2]=(PR[4,2]-(R[170]*R[171]/R[172])) ;
251:  LBL[13] ;
252:  R[173]=(R[199]*(R[197]/100)) ;
253:L PR[4] R[173]mm/sec CNT100    ;
254:   ;
255:  !Push cut unwarped portion ;
256:  PR[4,1]=((R[190]*(-25.4))+(R[196])*2+PR[4,1]) ;
257:  !!pathOption: 1 - Crosscut   ;
258:  IF R[195]<1,JMP LBL[14] ;
259:  PR[4,2]=(R[177]+R[189]*25.4/2) ;
260:  LBL[14] ;
261:  R[173]=R[199]    ;
262:L PR[4] R[173]mm/sec CNT100    ;
263:   ;
264:  !Pull cut unwarped portion ;
265:  PR[4,1]=((R[190]*25.4)-(R[196])*2+PR[4,1]) ;
266:  !!pathOption: >= 2 ;
267:  IF R[195]<2,JMP LBL[15] ;
268:  !!!B, D, & A Calculations ;
269:  R[170]=((R[177]*(-1)+R[189]*25.4/2)+(R[178]-R[189]*25.4/2)) ;
270:  R[171]=(R[196]) ;
271:  R[172]=((R[190]*25.4)-(R[196])) ;
272:  !!!E = B * D / A ;
273:  PR[4,2]=(R[178]-(R[189]*25.4)/2) ;
274:  PR[4,2]=(PR[4,2]-(R[170]*R[171]/R[172])) ;
275:  LBL[15] ;
276:  R[173]=R[199]    ;
277:L PR[4] R[173]mm/sec CNT100    ;
278:   ;
279:  !Pull cut warpOffset portion ;
280:  PR[4,1]=(PR[4,1]+(R[196])) ;
281:  !!pathOption: >= 2 ;
282:  IF R[195]<2,JMP LBL[16] ;
283:  PR[4,2]=(R[178]-(R[189]*25.4)/2) ;
284:  LBL[16] ;
285:  R[173]=(R[199]*(R[197]/100)) ;
286:L PR[4] R[173]mm/sec CNT100    ;
287:   ;
288:  PR[4,1]=(PR[4,1]+200) ;
289:  PR[4,3]=(PR[4,3]-200) ;
290:J PR[4] 100% CNT100    ;
291:   ;
292:  LBL[53] ;
293:   ;
294:  JMP LBL[86] ;
295:   ;
296:  !******************************** ;
297:  ! HD2 SECTION ;
298:  !******************************** ;
299:  LBL[141] ;
300:   ;
301:  !-------------------------------- ;
302:  !0" PASS ;
303:  !-------------------------------- ;
304:  !Compound On/Off ;
305:  IF R[182]=0,JMP LBL[179] ;
306:  H2 Compound ON(R[182]) ;
307:  Compound OFF    ;
308:  LBL[179] ;
309:   ;
310:  !Move to 1st Position ;
311:  PR[4,1]=(R[189]*25.4+R[191]+R[35]) ;
312:  PR[4,2]=(R[180]-(R[190]*25.4)/2) ;
313:  PR[4,3]=((-380)+R[14]-R[188]) ;
314:  PR[4,7]=0    ;
315:J PR[4] 100% CNT100    ;
316:   ;
317:  !Push cut unwarped portion ;
318:  R[173]=R[200]    ;
319:  PR[4,1]=((R[189]*(-25.4))+(R[196])*2+PR[4,1]) ;
320:  PR[4,2]=(R[179]+R[190]*25.4/2) ;
321:L PR[4] R[173]mm/sec CNT100    ;
322:   ;
323:  PR[4,1]=(PR[4,1]+200) ;
324:  PR[4,3]=(PR[4,3]-200) ;
325:J PR[4] 100% CNT100    ;
326:   ;
327:   ;
328:  !-------------------------------- ;
329:  !180" PASS ;
330:  !-------------------------------- ;
331:  !Compound On/Off ;
332:  IF R[182]<2,JMP LBL[180] ;
333:  H2 Compound ON(R[182]) ;
334:  Compound OFF    ;
335:  LBL[180] ;
336:   ;
337:  !Move to 1st Position ;
338:  PR[4,1]=(R[189]*25.4+R[191]+R[35]) ;
339:  PR[4,2]=(R[179]+(R[190]*25.4)/2) ;
340:  PR[4,3]=((-380)+R[14]-R[188]) ;
341:  PR[4,7]=180    ;
342:J PR[4] 100% CNT100    ;
343:   ;
344:  !Push cut unwarped portion ;
345:  R[173]=R[200]    ;
346:  PR[4,1]=((R[189]*(-25.4))+(R[196])*2+PR[4,1]) ;
347:  PR[4,2]=(R[180]-R[190]*25.4/2) ;
348:L PR[4] R[173]mm/sec CNT100    ;
349:   ;
350:  PR[4,1]=(PR[4,1]+200) ;
351:  PR[4,3]=(PR[4,3]-200) ;
352:J PR[4] 100% CNT100    ;
353:   ;
354:   ;
355:  !-------------------------------- ;
356:  !90" PASS ;
357:  !(Used to solve visible polish ;
358:  !on parts that are cut more than ;
359:  !2 directions) ;
360:  !-------------------------------- ;
361:  !check to see if 4 way ;
362:  !on polish is used ;
363:  IF ((R[194]=4 OR R[194]=9) AND R[184]=2),JMP LBL[144] ;
364:  JMP LBL[85] ;
365:  LBL[144] ;
366:   ;
367:  !Compound On/Off ;
368:  IF R[182]=0,JMP LBL[191] ;
369:  H2 Compound ON(R[182]) ;
370:  Compound OFF    ;
371:  LBL[191] ;
372:   ;
373:  !Move to 1st Position ;
374:  PR[4,1]=(R[190]*25.4+R[191]+R[35]) ;
375:  PR[4,2]=(R[180]-(R[189]*25.4)/2) ;
376:  PR[4,3]=((-380)+R[14]-R[188]) ;
377:  PR[4,7]=90    ;
378:J PR[4] 100% CNT100    ;
379:   ;
380:  !Push cut unwarped portion ;
381:  R[173]=R[200]    ;
382:  PR[4,1]=((R[190]*(-25.4))+(R[196])*2+PR[4,1]) ;
383:  PR[4,2]=(R[179]+R[189]*25.4/2) ;
384:L PR[4] R[173]mm/sec CNT100    ;
385:   ;
386:  PR[4,1]=(PR[4,1]+200) ;
387:  PR[4,3]=(PR[4,3]-200) ;
388:J PR[4] 100% CNT100    ;
389:   ;
390:  !-------------------------------- ;
391:  !270" PASS ;
392:  !(Used to solve visible polish ;
393:  !on parts that are cut more than ;
394:  !2 directions) ;
395:  !-------------------------------- ;
396:  !Compound On/Off ;
397:  IF R[182]<2,JMP LBL[192] ;
398:  H2 Compound ON(R[182]) ;
399:  Compound OFF    ;
400:  LBL[192] ;
401:   ;
402:  !Move to 1st Position ;
403:  PR[4,1]=(R[190]*25.4+R[191]+R[35]) ;
404:  PR[4,2]=(R[179]+(R[189]*25.4)/2) ;
405:  PR[4,3]=((-380)+R[14]-R[188]) ;
406:  PR[4,7]=270    ;
407:J PR[4] 100% CNT100    ;
408:   ;
409:  !Push cut unwarped portion ;
410:  R[173]=R[200]    ;
411:  PR[4,1]=((R[190]*(-25.4))+(R[196])*2+PR[4,1]) ;
412:  PR[4,2]=(R[180]-R[189]*25.4/2) ;
413:L PR[4] R[173]mm/sec CNT100    ;
414:   ;
415:  PR[4,1]=(PR[4,1]+200) ;
416:  PR[4,3]=(PR[4,3]-200) ;
417:J PR[4] 100% CNT100    ;
418:   ;
419:  LBL[85] ;
420:  Count SquareFeet    ;
421:  LBL[86] ;
      </code>
    </pre>
  </div>
